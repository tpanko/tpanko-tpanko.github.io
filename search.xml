<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>npm与cnpm 镜像源?</title>
      <link href="/2022/11/15/npm-yu-cnpm-jing-xiang-yuan/"/>
      <url>/2022/11/15/npm-yu-cnpm-jing-xiang-yuan/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>apt npm yum等这些到底有何区别?</title>
      <link href="/2022/11/15/apt-npm-yum-deng-zhe-xie-dao-di-you-he-qu-bie/"/>
      <url>/2022/11/15/apt-npm-yum-deng-zhe-xie-dao-di-you-he-qu-bie/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网络连接模式 NAT 桥接</title>
      <link href="/2022/11/15/wang-luo-lian-jie-mo-shi-nat-qiao-jie/"/>
      <url>/2022/11/15/wang-luo-lian-jie-mo-shi-nat-qiao-jie/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我的hexo建站经验</title>
      <link href="/2022/11/15/wo-de-hexo-jian-zhan-jing-yan/"/>
      <url>/2022/11/15/wo-de-hexo-jian-zhan-jing-yan/</url>
      
        <content type="html"><![CDATA[<p>##一、前言</p><p>第一次写博客文章，希望之后可以把这个习惯坚持下去。虽然目前自己对于这些知识是一知半解，但我觉得知识是一点点积累的，通过博客文章的编写与回顾，我会一步步补全我的知识体系。</p><h2 id="二、环境准备"><a href="#二、环境准备" class="headerlink" title="二、环境准备"></a>二、环境准备</h2><p>我是在<code>ubuntu</code>云服务器上进行配置的，后续准备在本地虚拟机上进行建站操作，因此这里提供<code>ubuntu</code>系统的环境准备。</p><p>###1、安装Nodejs </p><ul><li><p>第一步 去 <code>nodejs</code> 官网 <a href="https://nodejs.org/">https://nodejs.org</a> 看最新的版本号</p></li><li><p>第二步 添加源后安装</p><p><code>nodejs</code> 的每个大版号都有相对应的源，比如<code>18.x.x</code>版本的源是<code>https://deb.nodesource.com/setup_18.x</code></p><p>所以在终端执行：</p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">curl -sL https:&#x2F;&#x2F;deb.nodesource.com&#x2F;setup_18.x | sudo -E bash -<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>稍等片刻，源已经添加完毕，再执行：</p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">sudo apt-get install -y nodejs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 等待安装完成。</p></li><li><p>第三步 安装验证</p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">node -v#查看node版本npm -v#查看npm版本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>第四步 添加淘宝cnpm 管理器</p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">npm install -g cnpm --registry&#x3D;http:&#x2F;&#x2F;registry.npm.taobao.orgcnpm -v#查看cnpm版本 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><p>###2、安装git</p><p>初始化本地git仓库</p><p>设置Git的user name和email：</p><p>$ git config –global user.name “wuyanqina”<br>$ git config –global user.email “<a href="mailto:&#103;&#x72;&#x65;&#x65;&#x6e;&#111;&#x76;&#x69;&#x61;&#64;&#113;&#x71;&#x2e;&#99;&#111;&#x6d;">&#103;&#x72;&#x65;&#x65;&#x6e;&#111;&#x76;&#x69;&#x61;&#64;&#113;&#x71;&#x2e;&#99;&#111;&#x6d;</a>“（换成你的邮箱地址）</p><p>##三、hexo初始化</p><p>###1、安装hexo框架</p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">cnpm install -g hexo-cli    #安装hexo框架 hexo -v#查看hexo版本 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>###2、初始化博客</p><ul><li><p>1、执行<code>mkdir blog</code>命令，创建blog目录，作为hexo博客的根目录，也方便后续重置blog。</p></li><li><p>2、进入blog目录，执行<code>sudo hexo init</code>初始化博客。</p><blockquote><p><strong>初始化出现的问题及解决方法</strong></p><ul><li><p><strong>问题</strong>：执行hexo ini命令，即初始化阶段时，在clone完hexo初始化仓库后，卡在安装依赖的界面，</p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">hexo initINFO Cloning hexo-starter https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo-starter.gitINFO Install dependencies .......<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><strong>解决方法</strong>：ctrl+c退出当前命令，此时在当前文件夹内，已经有clone好的仓库</p><p>在当前文件夹继续执行 cnpm install，手动安装依赖。</p></li></ul><p>此时初始化已完成</p></blockquote></li><li><p>3、执行<code>hexo s</code>启动服务。<code>hexo s</code> 是开启本地预览服务，打开浏览器访问<code>ip:4000</code>即可看到内容，说明博客初始化成功！ </p><p><img src="C:\Users\Panko\AppData\Local\Temp\1668560225750.png" alt="1668560225750"></p></li></ul><h2 id="四、将博客部署到github个人主页"><a href="#四、将博客部署到github个人主页" class="headerlink" title="四、将博客部署到github个人主页"></a>四、将博客部署到github个人主页</h2><p>###1、配置SSH免密登录</p><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了（对于服务器，这种方法已经不可用。<code>remote: Support for password authentication was removed on August 13, 2021.</code>），所以我们使用ssh key来解决本地和服务器的连接问题。简单的来说就是给予你当前电脑访问你GitHub 仓库的权限 ~</p><ul><li><p>1、生成 ssh key</p><p>命令行中输入：<code>ssh-keygen -t rsa -C **@**.com</code>（你注册github时的邮箱地址）</p></li><li><p>2、将生成的密匙添加到github ssh密匙中。title自定义即可。</p></li><li><p>3 、验证验证ssh key<code>ssh -T git@github.com</code> 。出现下面的语句说明你的ssh key已经配置好了 <code>Hi name! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code>这时说明你的仓库可以使用ssh方式来上传下载代码，而不需要输入用户名和密码了。</p></li></ul><h3 id="2、github创建新的仓库"><a href="#2、github创建新的仓库" class="headerlink" title="2、github创建新的仓库"></a>2、github创建新的仓库</h3><p>在github创建一个新的仓库 <code>YourGithubName.github.io</code> </p><h3 id="3、blog目录下安装git部署插件"><a href="#3、blog目录下安装git部署插件" class="headerlink" title="3、blog目录下安装git部署插件"></a>3、blog目录下安装git部署插件</h3><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">cnpm install --save hexo-deployer-git <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4、配置blog根目录-config-yml"><a href="#4、配置blog根目录-config-yml" class="headerlink" title="4、配置blog根目录_config.yml"></a>4、配置blog根目录_config.yml</h3><p><strong>这里的repo需要设置成你git仓库的ssh链接</strong> </p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">#Deployment ## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html deploy:   type: git  repo:git@github.com:yourGithubName&#x2F;yourGithubName.github.io.gitbranch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>###5、在本地的blog文件夹中初始化git仓库 </p><p>执行命令<code> git init</code>初始化git仓库。</p><p><img src="C:\Users\Panko\AppData\Local\Temp\1668564276423.png" alt="1668564276423"></p><p>###6、将网站部署到github。</p><pre class="line-numbers language-none"><code class="language-none">hexo clean  &#x2F;&#x2F;清除缓存文件db.json和已生成的静态文件publichexo g   &#x2F;&#x2F;生成网站静态文件到默认设置的public文件夹hexo d   &#x2F;&#x2F;部署网站到设定的仓库<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这样你的博客就部署到了github个人主页上了，访问<a href="https://yourgithubname.github.io就可以查看自己部署的博客啦./">https://YourGithubName.github.io就可以查看自己部署的博客啦。</a></p><p>##参考链接</p><ul><li><a href="http://t.csdn.cn/O2qiI">http://t.csdn.cn/O2qiI</a></li><li><a href="https://www.bilibili.com/video/BV1Yb411a7ty">手把手教你从0开始搭建自己的个人博客</a></li><li><a href="http://t.csdn.cn/KVzo9">http://t.csdn.cn/KVzo9</a></li><li><a href="https://laughingtiger.gitee.io/2021/11/29/ru-he-kuai-su-da-jian-shu-yu-zi-ji-de-bo-ke/">https://laughingtiger.gitee.io/2021/11/29/ru-he-kuai-su-da-jian-shu-yu-zi-ji-de-bo-ke/</a> </li><li><a href="http://t.csdn.cn/uu0Xg">http://t.csdn.cn/uu0Xg</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 建站 </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/11/14/hello-world/"/>
      <url>/2022/11/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
